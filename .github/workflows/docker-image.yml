name: Docker Image CI

on:
  push:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        version: [ 2.24, 2.23, 2.22, 2.21, '2.20', 2.19, 2.18, 2.17, 2.16, 2.15 ]

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.version }}

    steps:
    - uses: actions/checkout@v4

    - name: docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: docker build
      run:  docker build . --tag meteofi/geoserver:${{ matrix.version }} --tag meteofi/geoserver:$(grep -Po '(?<=GEOSERVER_VERSION\=\")\d.\d+.\d+' Dockerfile)

    - if: ${{ matrix.version == '2.24' }}
      name: docker tag latest stable
      run: | 
        docker tag meteofi/geoserver:${{ matrix.version }} meteofi/geoserver:latest
        docker tag meteofi/geoserver:${{ matrix.version }} meteofi/geoserver:stable

    - if: ${{ matrix.version == '2.23' }}
      name: docker tag maintenance
      run: docker tag meteofi/geoserver:${{ matrix.version }} meteofi/geoserver:maintenance

    - name: docker compose up
      run: docker compose up -d --wait --wait-timeout 300

    - name: curl geoserver
      run: curl --silent --show-error --fail --include  "http://localhost:8080/geoserver/wms?request=getCapabilities&service=WMS"

    - name: docker logs geoserver
      run: docker logs geoserver

    - name: docker compose down
      run: docker compose down

    - name: docker push
      run:  docker push --all-tags meteofi/geoserver
